type File @model {
    contentType: String!
    createdAt: DateTime!
    id: ID! @isUnique
    name: String!
    secret: String! @isUnique
    size: Int!
    updatedAt: DateTime!
    url: String! @isUnique
}

type User @model {
    # Required system field:
    id: ID! @isUnique # read-only (managed by Graphcool)
    # Optional system fields (remove if not needed):
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)
    email: String! @isUnique
    password: String!
    name: String!
    team: Team @relation(name: "TeamMember")
    isAdmin: Boolean!
    topicsAsExpert: [Topic!]! @relation(name: "ExpertParticipation")
    topicsAsNewbie: [Topic!]! @relation(name: "NewbieParticipation")
    topicsAsAuthor: [Topic!]! @relation(name: "TopicAuthor")
}

type Location @model {
    id: ID! @isUnique # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    name: String!
    topics: [Topic!]! @relation(name: "TopicsInLocation")
}

type Topic @model {
    id: ID! @isUnique # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    title: String!
    description: String
    author: User @relation(name: "TopicAuthor")
    experts: [User!]! @relation(name: "ExpertParticipation")
    newbies: [User!]! @relation(name: "NewbieParticipation")
    begin: DateTime
    location: Location @relation(name: "TopicsInLocation")
    isTalk: Boolean!
}

type Team @model {
    id: ID! @isUnique # read-only (managed by Graphcool)
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    name: String!
    members: [User!]! @relation(name: "TeamMember")
}